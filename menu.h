//Честно адаптированное меню Филатова, хот от его изначальной идеи тут остался только скелет (он сам предложил его использовать).
//Он посоветовал использвать "форвардное" объявление, хотя в курсаче это не имеет особого смысла

#pragma once
#include "misc.h"
//#include "crypto.h"// // Его пока нет)))))))))))))))))))))))))))))
using namespace std;

int menu() {
	//decrypt() // Его пока нет)))))))))))))))))))))))))))))
	cout << "База данных расшифрована." << endl; system("pause");
	string choice;
	int mchoice = -1;
	for (;mchoice!=0;) 
	{
		system("cls");
		cout << "Выберете действие:\n";
		cout << "1.Вывод краткой информации о всех студентах\n";
		cout << "2.Вывод полной информации о всех студентах\n";
		cout << "3.Вывод полной информации о конкретном студенте\n";
		cout << "4.Изменение данных конкретного студента\n";
		cout << "5.Добавление нового студента с вводом с клавиатуры\n";
		cout << "6.Удаление студента из базы данных\n";
		cout << "5.Выполнить задание варианта 69 (разбиение и сортировка)\n";
		cout << "0.Выход из программы, с последующим шифрованием базы данных\n";
		cout << "> ";
		getline(cin, choice);//Филатов рекомендовал использовать getline, а не просто cin. Из за пробелов. getline нормально обрабатывает пробелы
		if (ValidIntModernised(choice)) 
			mchoice = stoi(choice);
		else { cout << "\nНекорректная команда!\n"; system("pause"); CinDel; return 666; }
		switch (mchoice)
		{
		case 1: {return 1; system("pause"); break; }//пока что это просто тест, меню ничего не делает((((
		case 2: {return 2; system("pause"); break; }
		case 3: {return 3; system("pause"); break; }
		case 4: {return 4; system("pause"); break; }
		case 5: {return 5; system("pause"); break; }
		case 0: {/*crypt()*/ cout << "\nРабота программы завершена, база данных зашифрована."; return 0; system("pause"); break; }
		default: {cout << "\nНеизвестная операция!\n"; system("pause"); break; }

		}
		CinDel;
	}
	return 0;
}
int studsubmenu() { // Для изменения данных о студенте
	//a.prfull();
	string schoice;
	int smchoice = -1;
	for (; smchoice != 0;)
	system("cls");
	cout << "Выберете действие:\n";
	cout << "1. Изменить индивидуальный номер студента\n";
	cout << "2. Изменить ФИО студента\n";
	cout << "3. Изменить фамилию студента\n";
	cout << "4. Изменить имя студента\n";
	cout << "5. Изменить отчество студента\n";
	cout << "6. Изменить пол студента\n";
	cout << "7. Изменить дату рождения и возраст\n";
	cout << "8. Изменить данные об институте/группе\n";
	cout << "9. Изменить данные о сессиях\n";
	cout << "10.Изменить физ. группу\n";
	cout << "0. Выйти и вернуться к работе с базой данных\n";
	cout << "> ";
	return 0;
}
int instisubmenu(){//Изменение данных об иснтитуте и группе студента
	string ichoice;
	int imchoice = -1;
	for (; imchoice != 0;)
		system("cls");
	cout << "Выберете действие:\n";
	cout << "1.Изменить институт\n";
	cout << "2.Изменить кафедру\n";
	cout << "3.Изменить группу\n";
	cout << "4.Изменить Id программы\n";
	cout << "5.Изменить название программы\n";
	cout << "6.Изменить дату поступления\n";
	cout << "7.Изменить текущий курс\n";
	cout << "8.Изменить текущий семестр\n";
	cout << "0.Выйти и вернуться к работе с студентом\n";
	cout << "> ";
	return 0;
}

int progsubmenu() {//Изменение данных о сессииях студента
	string pchoice;
	int pmchoice = -1;
	for (; pmchoice != 0;)
		system("cls");
	cout << "Выберете действие:\n";
	cout << "1.Добавить новую сессию с вводом с клавиатуры\n";
	cout << "2.Удалить сессию\n";
	cout << "3.Заменить существующию сессию на вводённую с клавиатуры\n";
	cout << "4.Изменить данные в конкретной сессии\n";
	cout << "0.Выйти и вернуться к работе с студентом\n";
	cout << "> ";
	return 0;
}
int sessiasubmenu() {
	string lchoice;
	int lmchoice = -1;
	for (; lmchoice != 0;)
		system("cls");
	cout << "Выберете действие:\n";
	cout << "1.Добавить зачёт\n";
	cout << "2.Добавить экзамен\n";
	cout << "3.Удалить зачёт\n";
	cout << "4.Удалить экзамен\n";
	cout << "5.Заменить зачёт\n";
	cout << "5.Заменить экзамен\n";
	cout << "0.Выйти и вернуться к работе с cписком сессий\n";
	cout << "> ";
	return 0;
}



